name: Generate API Docs

on:
  push:
    branches:
      - main # Change to your default branch

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14 # You can change this to your desired Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Generate API Docs
        run: npx jsdoc2md *.js > API.md # Adjust the source files and output file name as needed

      - name: Fetch Latest Changes from Remote
        run: git fetch origin temporary-docs-branch

      - name: Check for Changes
        run: |
          if git diff --quiet origin/temporary-docs-branch; then
            echo "No changes to push."
            exit 0
          fi

      - name: Commit and Push Changes to Temporary Branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add API.md
          git commit -m "Generate API documentation"
          git push origin temporary-docs-branch

      - name: Create Pull Request
        if: success() # Only create a PR if the previous steps were successful
        id: create_pr
        run: |
          GITHUB_TOKEN="${{ secrets.PAT_TOKEN }}"
          REPO_URL="${{ github.repository }}"
          HEAD_BRANCH="temporary-docs-branch"
          BASE_BRANCH="main"
          TITLE="Generate API Documentation"
          BODY="Automatically generated API documentation."

          PR_RESPONSE=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" -d "{
            \"title\": \"$TITLE\",
            \"body\": \"$BODY\",
            \"head\": \"$HEAD_BRANCH\",
            \"base\": \"$BASE_BRANCH\"
          }" "https://api.github.com/repos/$REPO_URL/pulls")

          PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number')

          # Approve the pull request
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$REPO_URL/pulls/$PR_NUMBER/reviews" -d '{
            "event": "APPROVE"
          }'

          # Merge the pull request (optional)
          curl -s -X PUT -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$REPO_URL/pulls/$PR_NUMBER/merge"

        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
