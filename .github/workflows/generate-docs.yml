name: Generate API Docs

on:
  push:
    branches:
      - main # Change to your default branch
      - '!temporary-docs-branch' # Ignore changes to the temporary branch
  pull_request:
    branches:
      - '!temporary-docs-branch' # Ignore changes to the temporary branch

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14 # You can change this to your desired Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Create temporary branch
        run: |
          git checkout -b temporary-docs-branch
          git push origin temporary-docs-branch

      - name: Fetch Latest Changes from Remote
        run: git fetch origin temporary-docs-branch

      - name: Generate API Docs
        run: npx jsdoc2md *.js > API.md # Adjust the source files and output file name as needed

      - name: Set Identity
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      #      - name: Merge Latest Changes
      #        run: git merge origin/temporary-docs-branch --allow-unrelated-histories
      - name: Check for Changes in API.md
        id: check_changes
        run: |
          if git diff --exit-code API.md; then
            echo "No changes in API.md"
            echo "##[set-output name=changed;]false"
          else
            echo "Changes detected in API.md"
            echo "##[set-output name=changed;]true"
          fi

      - name: Delete Branch and Exit if No Changes
        if: steps.check_changes.outputs.changed == 'false'
        run: |
          git branch -d temporary-docs-branch
          echo "No changes to commit, exiting workflow"
          exit 0

      - name: Commit and Push Changes to Temporary Branch
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git add API.md
          git commit -m "Generate API documentation"
          git push origin temporary-docs-branch
          
      - name: Create Pull Request
        if: success() # Only create a PR if the previous steps were successful
        id: create_pr
        run: |
          GITHUB_TOKEN="${{ secrets.PAT_TOKEN }}"
          REPO_URL="${{ github.repository }}"
          HEAD_BRANCH="temporary-docs-branch"
          BASE_BRANCH="main"
          TITLE="Generate API Documentation"
          BODY="Automatically generated API documentation."

          PR_RESPONSE=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" -d "{
            \"title\": \"$TITLE\",
            \"body\": \"$BODY\",
            \"head\": \"$HEAD_BRANCH\",
            \"base\": \"$BASE_BRANCH\"
          }" "https://api.github.com/repos/$REPO_URL/pulls")

          PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number')

          # Approve the pull request
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$REPO_URL/pulls/$PR_NUMBER/reviews" -d '{
            "event": "APPROVE"
          }'

          # Merge the pull request (optional)
          curl -s -X PUT -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$REPO_URL/pulls/$PR_NUMBER/merge"

      - name: Delete temporary branch
        run: |
          git push origin --delete temporary-docs-branch

        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
